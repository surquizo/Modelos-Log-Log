main = "Precio promedio mensual")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
par(new = TRUE)
plot(x = dit$FECHA, y = dit$PP, type = "l", col = "blue", axes = FALSE,
bty = "n", xlab = "", ylab = "", ylim = c(0,9000))
plot(x = dit$FECHA, y = dit$PC, type = "l", col = "blue", axes = FALSE,
bty = "n", xlab = "", ylab = "", ylim = c(0,28000))
plot(x = dit$FECHA, y = dit$PS, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,9000),
main = "Precio promedio mensual")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
par(new = TRUE)
plot(x = dit$FECHA, y = dit$PP, type = "l", col = "blue", axes = FALSE,
bty = "n", xlab = "", ylab = "", ylim = c(0,9000))
plot(x = dit$FECHA, y = dit$PC, type = "l", col = "blue", axes = FALSE,
bty = "n", xlab = "", ylab = "", ylim = c(0,28000))
plot(x = dit$FECHA, y = dit$PS, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,9000),
main = "Precio promedio mensual")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
par(new = TRUE)
plot(x = dit$FECHA, y = dit$PP, type = "l", col = "blue", axes = FALSE,
bty = "n", xlab = "", ylab = "", ylim = c(0,9000))
par(new = TRUE)
plot(x = dit$FECHA, y = dit$PC, type = "l", col = "blue", axes = FALSE,
bty = "n", xlab = "", ylab = "", ylim = c(0,28000))
summary(dit$PC)
plot(x = dit$FECHA, y = dit$PS, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,14000),
main = "Precio promedio mensual")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
par(new = TRUE)
plot(x = dit$FECHA, y = dit$PP, type = "l", col = "blue", axes = FALSE,
bty = "n", xlab = "", ylab = "", ylim = c(0,14000))
par(new = TRUE)
plot(x = dit$FECHA, y = dit$PC, type = "l", col = "blue", axes = FALSE,
bty = "n", xlab = "", ylab = "", ylim = c(0,14000))
boxplot(dit$PS)
boxplot(dit$PP)
boxplot(dit$PC)
plot(x = dit$FECHA, y = dit$PS)
plot(x = dit$FECHA, y = dit$PS, type = "l", xlab = "Fecha")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
plot(x = dit$FECHA, y = dit$PS, type = "l", xlab = "Fecha")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
plot(x = dit$FECHA, y = dit$PS, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,14000),
main = "Precio promedio mensual")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
plot(x = dit$FECHA, y = dit$PS, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,14000),
main = "Precio promedio mensual")
summary(dit$PS)
plot(x = dit$FECHA, y = dit$PS, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,10000),
main = "Precio promedio mensual")
plot(x = dit$FECHA, y = dit$PS, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,15000),
main = "Precio promedio mensual")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
plot(x = dit$FECHA, y = dit$PS, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,15000),
main = "Precio promedio mensual")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
plot(x = dit$FECHA, y = dit$PP, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,15000),
main = "Precio promedio mensual")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
plot(x = dit$FECHA, y = dit$PC, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,15000),
main = "Precio promedio mensual")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
par(mfrow = c(1, 3))
plot(x = dit$FECHA, y = dit$PS, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,15000),
main = "Precio promedio mensual")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
plot(x = dit$FECHA, y = dit$PP, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,15000),
main = "Precio promedio mensual")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
plot(x = dit$FECHA, y = dit$PC, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio", ylim = c(0,15000),
main = "Precio promedio mensual")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
par(mfrow = c(1, 3))
plot(x = dit$FECHA, y = dit$PS, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio de servicios", ylim = c(0,15000))
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
plot(x = dit$FECHA, y = dit$PP, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio de estructuras provisorios", ylim = c(0,15000))
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
plot(x = dit$FECHA, y = dit$PC, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Precio de componentes dentales", ylim = c(0,15000))
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
typeof(dit$FECHA)
typeof(dit$PP)
dit_cor <- dit %>% select(-FECHA,-TEMP)
chart.Correlation(dit_cor, histogram = F, pch = 19)
cor(dit$DM, dit$PS)
?cor()
dit <- import("../Proyecto UC/bd_dit.xlsx")
dit_cor <- dit %>% select(-FECHA,-TEMP)
chart.Correlation(dit_cor, histogram = F, pch = 19)
dit_corr <- mutate(dit_cor, funs(log))
log(dit_cor)
loglogmod <- lm(log(DZ)~log(PZ), data = dit)
chart.Correlation(log(dit_cor), histogram = F, pch = 19)
log(dit_cor)
chart.Correlation(dit_cor, histogram = F, pch = 19)
ggpairs(dit_cor,upper = list(continuous = wrap("cor", size = 3)))
library(GGally)
ggpairs(dit_cor,upper = list(continuous = wrap("cor", size = 3)))
dit <- import("../Proyecto UC/bd_dit.xlsx")
names(dit)
modelo_zr <- lm(log(DZ) ~ 1, data = dit)
add1(modelo_zr, ~ . + log(PZ) + log(PS) + log(PM) + log(PC) + log(TEMP),
test="F", data = dit)
modelo_zr <- lm(log(DZ) ~ 1, data = dit)
add1(modelo_zr, ~ log(PZ) + log(PS) + log(PM) + log(PC) + log(TEMP),
test="F", data = dit)
dit$TEMP <- as.factor(dit$TEMP)
modelo_zr <- lm(log(DZ) ~ 1, data = dit)
add1(modelo_zr, ~ log(PZ) + log(PS) + log(PM) + log(PC) + log(TEMP),
test="F", data = dit)
dit_log <- log(dit)
dit_log <- log(dit[c(1,9),])
dit[c(1,9),]
dit[,c(1,9)]
dit[,-c(1,9)]
dit_log <- log(dit[,-c(1,9)])
dit_log$TEMP <- dit$TEMP
dit_log
modelo_zr <- lm(DZ ~ 1, data = dit_log)
add1(modelo_zr, ~ PZ + PS + PM + PC + TEMP, test="F", data = dit)
modelo_zr <- lm(DZ ~ 1, data = dit_log)
add1(modelo_zr, ~ PZ + PS + PM + PC + TEMP, test="F", data = dit_log)
dit_log
modelo_zr <- lm(DZ ~ TEMP, data = dit_log)
add1(modelo_zr, ~ PZ + PS + PM + PC , test="F", data = dit_log)
modelo_zr <- lm(DZ ~ 1, data = dit_log)
add1(modelo_zr, ~ PZ + PS + PM + PC + TEMP, test="F", data = dit_log)
modelo_zr <- lm(DZ ~ TEMP, data = dit_log)
add1(modelo_zr, ~ PZ + PS + PM + PC, test="F", data = dit_log)
modelo_zr <- lm(DZ ~ TEMP, data = dit_log)
add1(modelo_zr, ~ PZ + PS + PM + PC, test="F", data = dit_log)
dit_log$TEMP
dit_log
loglog_metal <- lm(DM~PZ + PS + PM + PC + TEMP, data = dit_log)
drop1(loglog_metal, test = "F")
loglog_metal <- lm(DM~PZ + PM + PC + TEMP, data = dit_log)
drop1(loglog_metal, test = "F")
loglog_metal <- lm(DM~PZ + PM + TEMP, data = dit_log)
drop1(loglog_metal, test = "F")
loglog_metal <- lm(DM ~ PZ + PS + PM + PC + TEMP, data = dit_log)
drop1(loglog_metal, test = "F")
loglog_metal <- lm(DM ~ PZ + PM + PC + TEMP, data = dit_log)
drop1(loglog_metal, test = "F")
loglog_metal <- lm(DM ~ PZ + PM + TEMP, data = dit_log)
drop1(loglog_metal, test = "F")
summary(loglog_metal)
anova(loglog_metal)
performance::check_model(loglog_metal)
performance::check_model(loglog_metal)
dit_log
loglog_zirc <- lm(DZ ~ PZ + PS + PM + PC + TEMP, data = dit_log)
drop1(loglog_zirc, test = "F")
loglog_zirc <- lm(DZ ~ PZ + PS + PM + TEMP, data = dit_log)
drop1(loglog_zirc, test = "F")
loglog_zirc <- lm(DZ ~ PZ + PS + TEMP, data = dit_log)
drop1(loglog_zirc, test = "F")
summary(loglog_zirc)
plot(dit$DZ, dit$PZ)
plot(dit_log$DZ, dit$PZ)
plot(dit_log$DZ, dit_log$PZ)
par(mfrow = c(1, 1))
plot(dit_log$DZ, dit_log$PZ)
loglog_zirc <- lm(DZ ~ PZ + PS + TEMP, data = dit_log)
drop1(loglog_zirc, test = "F")
summary(loglog_zirc)
summary(loglog_metal)
exp(-0.4984531)
exp(-0.4984531*âˆ—log(1.1))
exp(-0.4984531 * log(1.1))
1-exp(-0.4984531 * log(1.1))
summary(loglog_metal)
1-exp(-6.1665 * log(1.1))
summary(loglog_metal)
loglog_zirc <- lm(DZ ~ PZ + PS + PM + PC + TEMP, data = dit_log)
drop1(loglog_zirc, test = "F")
loglog_zirc <- lm(DZ ~PS + PM + PC + TEMP, data = dit_log)
drop1(loglog_zirc, test = "F")
loglog_zirc <- lm(DZ ~ PS + PM + TEMP, data = dit_log)
drop1(loglog_zirc, test = "F")
summary(loglog_zirc)
summary(loglog_metal)
summary(loglog_zirc)
performance::check_model(loglog_zirc)
AIC(loglog_zirc)
AIC(loglog_metal)
dit_log
# Fit the full model
full.model <- lm(DM ~., data = dit_log)
# Stepwise regression model
step.model <- stepAIC(full.model, direction = "both",
trace = FALSE)
library(MASS)
# Stepwise regression model
step.model <- stepAIC(full.model, direction = "both",
trace = FALSE)
summary(step.model)
summary(loglog_metal)
AIC(step.model)
AIC(loglog_metal)
dit_log
dit_log[,-2]
# Fit the full model
full.model <- lm(DM ~., data = dit_log[,-2])
# Stepwise regression model
step.model <- stepAIC(full.model, direction = "both",
trace = FALSE)
summary(step.model)
summary(loglog_metal)
# Fit the full model
full.model <- lm(DM ~., data = dit_log)
# Stepwise regression model
step.model <- stepAIC(full.model, direction = "both",
trace = FALSE)
summary(step.model)
# Fit the full model
full.model.metal <- lm(DM ~., data = dit_log)
# Stepwise regression model
step.model <- stepAIC(full.model.metal, direction = "both",
trace = FALSE)
summary(step.model)
full.model.zr <- lm(DZ ~., data = dit_log)
# Stepwise regression model
step.model <- stepAIC(full.model.zr, direction = "both",
trace = FALSE)
summary(step.model)
# Fit the full model
full.model.metal <- lm(DM ~., data = dit_log)
# Stepwise regression model
step.model.metal <- stepAIC(full.model.metal, direction = "both",
trace = FALSE)
summary(step.model.metal)
full.model.zr <- lm(DZ ~., data = dit_log)
# Stepwise regression model
step.model.zr <- stepAIC(full.model.zr, direction = "both",
trace = FALSE)
summary(step.model.zr)
dit_log
datos_zr <- dit_log %>% select(DM, PS, PM, PZ, PC, TEMP)
datos_zr <- dit_log %>% select(DM + PS + PM + PZ + PC + TEMP)
datos_zr <- dit_log %>% select_(DM + PS + PM + PZ + PC + TEMP)
datos_zr <- dit_log %>% select_(DM, PS, PM, PZ, PC, TEMP)
datos_zr <- dit_log %>% dplyr::select(DM, PS, PM, PZ, PC, TEMP)
View(datos_zr)
full.model.zr <- lm(DZ ~., data = datos_zr)
dit <- import("../Proyecto UC/bd_dit.xlsx")
dit$TEMP <- as.factor(dit$TEMP)
dit$FECHA <- as.Date(dit$FECHA)
names(dit)
dit_log <- log(dit[,-c(1,9)])
dit_log$TEMP <- dit$TEMP
View(dit_log)
log(0)
log(1)
datos_zr <- dit_log %>% dplyr::select(DZ, PS, PM, PZ, PC, TEMP)
names(dit_log)
datos_zr <- dit_log %>% dplyr::select(DZ, DM, PS, PM, PP, PZ, PC, TEMP)
full.model.zr <- lm(DZ ~., data = datos_zr)
step.model.zr <- stepAIC(full.model.zr, direction = "both", trace = FALSE)
summary(step.model.zr)
datos_zr <- dit_log %>% dplyr::select(DZ, DM, PS, PM, PZ, PC, TEMP)
full.model.zr <- lm(DZ ~., data = datos_zr)
step.model.zr <- stepAIC(full.model.zr, direction = "both", trace = FALSE)
summary(step.model.zr)
names(dit_log)
datos_zr <- dit_log %>% dplyr::select(DZ, DM, PS, PM, PP, PZ, PC, TEMP)
full.model.zr <- lm(DZ ~., data = datos_zr)
step.model.zr <- stepAIC(full.model.zr, direction = "both", trace = FALSE)
summary(step.model.zr)
full.model.zr <- lm(DZ ~., data = dit_log)
step.model.zr <- stepAIC(full.model.zr, direction = "both", trace = FALSE)
summary(step.model.zr)
AIC(full.model.zr)
AIC(step.model.zr)
summary(full.model.zr)
# Fit the full model
full.model.mt <- lm(DM ~., data = dit_log)
step.model.mt <- stepAIC(full.model.mt, direction = "both", trace = FALSE)
summary(step.model.mt)
summary(step.model.zr)
AIC(full.model.mt)
AIC(step.model.mt)
summary(step.model.mt)
performance::check_model(step.model.mt)
performance::check_model(step.model.mt)
performance::check_model(step.model.mt)
performance::check_model(step.model.mt)
performance::check_model(step.model.mt)
# Coeficientes hii
hii<-ls.diag(step.model.zr)$hat
i<-seq(1,n,1)
i[hii>=2*p/n]
i<-seq(1,n,1)
n=nrow(dit_log)
hii<-ls.diag(step.model.zr)$hat
i<-seq(1,n,1)
i[hii>=2*p/n]
p=length(coef(step.model.zr))
hii<-ls.diag(step.model.zr)$hat
i<-seq(1,n,1)
i[hii>=2*p/n]
#Distancia de cook
D<-ls.diag(step.model.zr)$cooks
i[D>=4/(n - p - 1)]
t.bc<-ls.diag(step.model.zr)$stud.res
y.gorro.bc<-step.model.zr$fitted
a<-max(abs(t.bc),qt(0.975,(n - p - 1)))
i<-seq(1,n,1)
i[abs(t.bc)>=qt(0.975,(n - p - 1))]
performance::check_model(step.model.zr)
performance::check_model(step.model.zr)
performance::check_model(step.model.zr)
performance::check_model(step.model.zr)
performance::check_model(step.model.mt)
summary(step.model.mt)
#validaciÃ³n modelo metal
p=length(coef(step.model.mt))
hii<-ls.diag(step.model.mt)$hat
i<-seq(1,n,1)
i[hii>=2*p/n]
t.bc<-ls.diag(step.model.mt)$stud.res
y.gorro.bc<-step.model.mt$fitted
a<-max(abs(t.bc),qt(0.975,(n - p - 1)))
i<-seq(1,n,1)
i[abs(t.bc)>=qt(0.975,(n - p - 1))]
summary(full.model.mt)
stepAIC(full.model.mt, direction = "both", trace = FALSE)
stepAIC(full.model.mt, direction = "both", trace = FALSE)
stepAIC(full.model.mt, direction = "both", trace = T)
#Modelo Demanda de Metal
null.model.mt <- lm(DM ~ 1, data = dit_log)
null.model.mt
step.model.mt2 <- stepAIC(null.model.mt, direction = "both", trace = T)
step.model.mt2 <- stepAIC(null.model.mt, direction = "both", trace = T)
step.model.mt <- stepAIC(full.model.mt, direction = "both", trace = T)
summary(step.model.mt)
step.model.mt <- stepAIC(full.model.mt, direction = "both", trace = T)
summary(step.model.mt)
ggpairs(dit_cor,upper = list(continuous = wrap("cor", size = 3)))
dit_cor <- dit %>% select(-FECHA,-TEMP)
ggpairs(dit_cor,upper = list(continuous = wrap("cor", size = 3)))
dit_cor <- dit %>% select(-FECHA,-TEMP)
View(dit)
dit_cor <- dit %>% dplyr::select(-FECHA,-TEMP)
ggpairs(dit_cor,upper = list(continuous = wrap("cor", size = 3)))
ggpairs(log(dit_cor),upper = list(continuous = wrap("cor", size = 3)))
summary(step.model.mt)
summary(step.model.zr)
shapiro.test(step.model.mt$residuals)
bptest( step.model.mt )
lmtest::bptest(step.model.mt)
step.model.mt <- stepAIC(full.model.mt, direction = "both", trace = T)
library(ggplot2)
library(dplyr)
library(rio)
library(PerformanceAnalytics)
library(GGally)
library(MASS)
dit <- import("../Proyecto UC/bd_dit.xlsx")
dit$FECHA <- as.Date(dit$FECHA)
dit$TEMP <- as.factor(dit$TEMP)
names(dit)
dit_log <- log(dit[,-c(1,9)])
dit_log$TEMP <- dit$TEMP
n=nrow(dit_log)
full.model.zr <- lm(DZ ~., data = dit_log)
step.model.zr <- stepAIC(full.model.zr, direction = "both", trace = FALSE)
summary(step.model.zr)
AIC(full.model.zr)
AIC(step.model.zr)
performance::check_model(step.model.zr)
summary(step.model.zr)
# AnÃ¡lisis de colinealidad
X=cbind(dit_log$DM,dit_log$PP,dit_log$PZ,dit_log$TEMP)
V=solve(cor(X))
VIFs=diag(V)
VIFs
modelo0_zr =lm(DZ ~ 1, data = dit_log)
# Coeficientes hii
names(dit)
add1(modelo0_zr, ~ DM + PS + PM + PP + PZ + PC + TEMP, test="F")
modelo1_zr =lm(DZ ~ TEMP, data = dit_log)
add1(modelo1_zr, ~ DM + PS + PM + PP + PZ + PC, test="F")
modelo0_zr =lm(DZ ~ 1, data = dit_log)
add1(modelo0_zr, ~ DM + PS + PM + PP + PZ + PC + TEMP, test="F")
modelo1_zr =lm(DZ ~ TEMP, data = dit_log)
add1(modelo1_zr, ~ DM + PS + PM + PP + PZ + PC, test="F")
summary(modelo1_zr)
modelo1_zr =lm(DZ ~ TEMP, data = dit_log)
add1(modelo1_zr, ~ DM + PS + PM + PP + PZ + PC + TEMP, test="F")
datos<-read.table("../Proyecto UC/porcentaje.txt",header=T)
pairs(datos)
round(cor(datos$porcentaje,datos[,1:3]),2)
round(cor(datos[,1:3]),2)
modelo<-lm(porcentaje ~ piel + pierna + brazo,data=datos)
summary(modelo)
X=cbind(piel,pierna,brazo)
V=solve(cor(X))
VIFs=diag(V)
VIFs
modelo1<-lm(piel ~ pierna + brazo)
R21<-summary(modelo1)$r.squared
1/(1 - R21)
R21<-summary(modelo1)$r.squared
modelo1<-lm(piel ~ pierna + brazo)
piel
pairs(datos)
modelo1<-lm(piel ~ pierna + brazo)
modelo1<-lm(piel ~ pierna + brazo, data = datos)
R21<-summary(modelo1)$r.squared
1/(1 - R21)
modelo0=lm(porcentaje ~ 1)
modelo0=lm(porcentaje ~ 1, data = datos)
modelo0=lm(porcentaje ~ 1, data = datos)
add1(modelo0, ~ piel + pierna + brazo,test="F")
modelo1=lm(porcentaje ~ pierna)
add1(modelo1, ~ piel + pierna + brazo,test="F")
modelo1=lm(porcentaje ~ pierna)
modelo1=lm(porcentaje ~ pierna, data = datos)
add1(modelo1, ~ piel + pierna + brazo,test="F")
modelo0_zr =lm(DZ ~ 1, data = dit_log)
add1(modelo0_zr, ~ DM + PS + PM + PP + PZ + PC + TEMP, test="F")
modelo1_zr =lm(DZ ~ TEMP, data = dit_log)
add1(modelo1_zr, ~ DM + PS + PM + PP + PZ + PC + TEMP, test="F")
modelo2_zr =lm(DZ ~ TEMP + PS, data = dit_log)
add1(modelo2_zr, ~ DM + PS + PM + PP + PZ + PC + TEMP, test="F")
modelo2_zr =lm(DZ ~ TEMP + PS + PP, data = dit_log)
modelo3_zr =lm(DZ ~ TEMP + PS + PP, data = dit_log)
add1(modelo3_zr, ~ DM + PS + PM + PP + PZ + PC + TEMP, test="F")
summary(modelo3_zr)
performance::check_model(modelo3_zr)
performance::check_model(modelo3_zr)
performance::check_model(modelo3_zr)
summary(modelo3_zr)
library(ggplot2)
library(dplyr)
library(rio)
library(PerformanceAnalytics)
library(GGally)
library(MASS)
dit <- import("../Proyecto UC/bd_dit.xlsx")
summary(modelo3_zr)
modelo0_zr =lm(DZ ~ 1, data = dit_log)
add1(modelo0_zr, ~ DM + PS + PM + PP + PZ + PC + TEMP, test="F")
X=cbind(dit_log$DZ, dit_log$PP, dit_log$PS, dit_log$TEMP)
V=solve(cor(X))
VIFs=diag(V)
VIFs
## Test de Kolmogorov-Smirnov
r <- ls.diag(modelo3_zr)$std.res
ks.test(r, "pnorm")
?ks.test()
ks.test(r, "pnorm")
#Homocedasticidad
lmtest::bptest(modelo3_zr)
lmtest::bptest(step.model.mt)
summary(modelo3_zr)
cor(dit$DZ, dit$PS)
corplot(dit$DZ, dit$PS)
plot(dit$DZ, dit$PS)
plot(dit_log$DZ, dit_log$PS)
cor(dit_log$DZ, dit_log$PS)
cor(dit$DZ, dit$PS)
plot(dit$DZ, dit$PS)
ggpairs(dit_cor,upper = list(continuous = wrap("cor", size = 3)))
ibrary(ggplot2)
library(dplyr)
library(rio)
library(PerformanceAnalytics)
library(GGally)
library(MASS)
ggpairs(dit_cor,upper = list(continuous = wrap("cor", size = 3)))
dit_cor <- dit %>% dplyr::select(-FECHA,-TEMP)
ggpairs(dit_cor,upper = list(continuous = wrap("cor", size = 3)))
summary(dit$DZ)
summary(dit$PZ)
par(mar = c(5.25, 4.25, 4.25, 4.25))
plot(x = dit$FECHA, y = dit$DZ, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Demanda", ylim = c(0,1400),
main = "Unidades vendidas vs Precio promedio (Estructuras de Zirconio)")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
par(new = TRUE)
plot(x = dit$FECHA, y = dit$PZ, type = "l", col = "blue", axes = FALSE,
bty = "n", xlab = "", ylab = "", ylim = c(16000,24000))
axis(4,col.axis = "blue")
mtext("Precio", side = 4, line = 3, col = "blue")
ggpairs(dit_cor,upper = list(continuous = wrap("cor", size = 3)))
chart.Correlation(log(dit_cor), histogram = F, pch = 19)
par(mar = c(5.25, 4.25, 4.25, 4.25))
plot(x = dit$FECHA, y = dit$DM, type = "l", xlab = "Fecha", xaxt = "n",
ylab = "Demanda", ylim = c(0,1800),
main = "Unidades vendidas vs Precio promedio (Estructuras de metal)")
axis(1, dit$FECHA, format(dit$FECHA, "%b %y"), cex.axis = .7)
par(new = TRUE)
plot(x = dit$FECHA, y = dit$PM, type = "l", col = "blue", axes = FALSE,
bty = "n", xlab = "", ylab = "", ylim = c(0,28000))
axis(4,col.axis = "blue")
mtext("Precio", side = 4, line = 3, col = "blue")
